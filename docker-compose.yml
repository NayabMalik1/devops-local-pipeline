version: '3.3'

services:
  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: devopslocalpipeline_web
    restart: unless-stopped
    environment:
      - ENV=local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - devops-network
    ports:
      - "8000:8000"

  nginx:
    image: nginx:alpine
    container_name: devopslocalpipeline_nginx
    ports:
      - "80:80"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - devops-network

  prometheus:
    image: prom/prometheus:latest
    container_name: devopslocalpipeline_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    networks:
      - devops-network

  grafana:
    image: grafana/grafana:latest
    container_name: devopslocalpipeline_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/monitoring/grafana:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - devops-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: devopslocalpipeline_node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
    restart: unless-stopped
    networks:
      - devops-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  devops-network:
    driver: bridge

